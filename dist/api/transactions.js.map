{"version":3,"sources":["../../src/api/transactions.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,GAAG,GAAG,aALH,MAAM,EAKS,CAAC;AACzB,GAAG,CAAC,GAAG,CAAC,mBAAS,YAAY,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;;AAEtE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACzB,MAAM,KAAK,GAAG,WAPM,UAAU,MACvB,WAAW,EAMoB,GAAG,CAAC,CAAC;AAC3C,OAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AACzB,MARO,WAAW,CAQN,MAAM,CAAC,KAAK,EAAE,iBAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IARpC,WAAW,CAQqC,aAAa,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,UAAC,SAAS,EAAK;AAC7G,QAAI,SAAS,EAAE;AAAE,aAAO,WAVnB,WAAW,EAUoB,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;KAAE;AAChF,QAVK,WAAW,CAUJ,IAAI,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,YAAY,EAAK;AACjD,UAAI,OAAO,EAAE;AAAE,eAAO,WAZnB,WAAW,EAYoB,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;OAAE;AAC5E,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACnB,eAAO,kCAAkC;AACzC,YAAI,EAAE,YAAY;OACnB,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC5B,MAAM,KAAK,GAAG,WAtBM,UAAU,MACvB,WAAW,EAqBoB,GAAG,CAAC,CAAC;AAC3C,OAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AACzB,MAvBO,WAAW,CAuBN,IAAI,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,YAAY,EAAK;AACjD,QAAI,OAAO,EAAE;AAAE,aAAO,WAzBjB,WAAW,EAyBkB,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;KAAE;AAC5E,oBAAM,SAAS,CAAC,YAAY,EAAE,UAAC,WAAW,EAAE,QAAQ,EAAK;AACvD,iBAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC9B,EAAE,UAAC,SAAS,EAAE,mBAAmB,EAAK;AACrC,UAAI,SAAS,EAAE;AAAE,eAAO,WA7BrB,WAAW,EA6BsB,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;OAAE;AAChF,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACnB,eAAO,kCAAkC;AACzC,YAAI,EAAE,mBAAmB;OAC1B,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,wBAAS,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;;kBAE7B,GAAG","file":"transactions.js","sourcesContent":["import _ from 'lodash';\nimport async from 'async';\nimport passport from 'passport';\nimport { Router } from 'express';\nimport resource from './resource';\nimport { handleError, buildQuery } from './index';\nimport { Transaction } from '../db';\n\nconst api = new Router();\napi.use(passport.authenticate(['jwt', 'bearer'], { session: false }));\n\napi.put('/', (req, res) => {\n  const query = buildQuery(Transaction, req);\n  query.user = req.user.id;\n  Transaction.update(query, _.omit(req.body, Transaction.readonlyProps() || []), { multi: true }, (updateErr) => {\n    if (updateErr) { return handleError(updateErr, res, 'update', 'Transactions'); }\n    Transaction.find(query, (findErr, transactions) => {\n      if (findErr) { return handleError(findErr, res, 'update', 'Transactions'); }\n      res.status(200).send({\n        message: `Success! Transactions updated.`,\n        data: transactions\n      });\n    });\n  });\n});\n\napi.delete('/', (req, res) => {\n  const query = buildQuery(Transaction, req);\n  query.user = req.user.id;\n  Transaction.find(query, (findErr, transactions) => {\n    if (findErr) { return handleError(findErr, res, 'delete', 'Transactions'); }\n    async.mapSeries(transactions, (transaction, callback) => {\n      transaction.remove(callback);\n    }, (removeErr, deletedTransactions) => {\n      if (removeErr) { return handleError(removeErr, res, 'delete', 'Transactions'); }\n      res.status(200).send({\n        message: `Success! Transactions deleted.`,\n        data: deletedTransactions\n      });\n    });\n  });\n});\n\napi.use('/', resource('Transaction', true));\n\nexport default api;\n"]}
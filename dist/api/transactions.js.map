{"version":3,"sources":["../../src/api/transactions.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,MAAM,qBAAN;AACN,IAAI,GAAJ,CAAQ,mBAAS,YAAT,CAAsB,CAAC,KAAD,EAAQ,QAAR,CAAtB,EAAyC,EAAE,SAAS,KAAT,EAA3C,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACzB,MAAM,QAAQ,wCAAwB,GAAxB,CAAR,CADmB;AAEzB,QAAM,IAAN,GAAa,IAAI,IAAJ,CAAS,EAAT,CAFY;AAGzB,kBAAY,IAAZ,CAAiB,KAAjB,EAAwB,UAAC,OAAD,EAAU,YAAV,EAA2B;AACjD,QAAI,OAAJ,EAAa;AAAE,aAAO,wBAAY,OAAZ,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,cAApC,CAAP,CAAF;KAAb;AACA,QAAM,sBAAsB,aAAa,GAAb,CAAiB,UAAC,WAAD;aAAiB,iBAAE,KAAF,CAAQ,WAAR,EAAqB,iBAAE,IAAF,CAAO,IAAI,IAAJ,EAAU,gBAAY,aAAZ,MAA+B,EAA/B,CAAtC;KAAjB,CAAvC,CAF2C;AAGjD,oBAAM,GAAN,CAAU,mBAAV,EAA+B,UAAC,WAAD,EAAc,QAAd,EAA2B;AACxD,kBAAY,IAAZ,CAAiB,QAAjB,EADwD;KAA3B,EAE5B,UAAC,OAAD,EAAU,cAAV,EAA6B;AAC9B,UAAI,OAAJ,EAAa;AAAE,eAAO,wBAAY,OAAZ,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,cAApC,CAAP,CAAF;OAAb;AACA,UAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,iDADmB;AAEnB,cAAM,cAAN;OAFF,EAF8B;KAA7B,CAFH,CAHiD;GAA3B,CAAxB,CAHyB;CAAd,CAAb;;AAkBA,IAAI,MAAJ,CAAW,GAAX,EAAgB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC5B,MAAM,QAAQ,wCAAwB,GAAxB,CAAR,CADsB;AAE5B,QAAM,IAAN,GAAa,IAAI,IAAJ,CAAS,EAAT,CAFe;AAG5B,kBAAY,IAAZ,CAAiB,KAAjB,EAAwB,UAAC,OAAD,EAAU,YAAV,EAA2B;AACjD,QAAI,OAAJ,EAAa;AAAE,aAAO,wBAAY,OAAZ,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,cAApC,CAAP,CAAF;KAAb;AACA,oBAAM,GAAN,CAAU,YAAV,EAAwB,UAAC,WAAD,EAAc,QAAd,EAA2B;AACjD,kBAAY,MAAZ,CAAmB,QAAnB,EADiD;KAA3B,EAErB,UAAC,SAAD,EAAY,mBAAZ,EAAoC;AACrC,UAAI,SAAJ,EAAe;AAAE,eAAO,wBAAY,SAAZ,EAAuB,GAAvB,EAA4B,QAA5B,EAAsC,cAAtC,CAAP,CAAF;OAAf;AACA,UAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,iDADmB;AAEnB,cAAM,mBAAN;OAFF,EAFqC;KAApC,CAFH,CAFiD;GAA3B,CAAxB,CAH4B;CAAd,CAAhB;;AAiBA,IAAI,GAAJ,CAAQ,GAAR,EAAa,wBAAS,aAAT,EAAwB,IAAxB,CAAb;;kBAEe","file":"transactions.js","sourcesContent":["import _ from 'lodash';\nimport async from 'async';\nimport passport from 'passport';\nimport { Router } from 'express';\nimport resource from './resource';\nimport { handleError, buildQuery } from './index';\nimport { Transaction } from '../db';\n\nconst api = new Router();\napi.use(passport.authenticate(['jwt', 'bearer'], { session: false }));\n\napi.put('/', (req, res) => {\n  const query = buildQuery(Transaction, req);\n  query.user = req.user.id;\n  Transaction.find(query, (findErr, transactions) => {\n    if (findErr) { return handleError(findErr, res, 'update', 'Transactions'); }\n    const updatedTransactions = transactions.map((transaction) => _.merge(transaction, _.omit(req.body, Transaction.readonlyProps() || [])));\n    async.map(updatedTransactions, (transaction, callback) => {\n      transaction.save(callback);\n    }, (saveErr, dbTransactions) => {\n      if (saveErr) { return handleError(saveErr, res, 'delete', 'Transactions'); }\n      res.status(200).send({\n        message: `Success! Transactions updated.`,\n        data: dbTransactions\n      });\n    });\n  });\n});\n\napi.delete('/', (req, res) => {\n  const query = buildQuery(Transaction, req);\n  query.user = req.user.id;\n  Transaction.find(query, (findErr, transactions) => {\n    if (findErr) { return handleError(findErr, res, 'delete', 'Transactions'); }\n    async.map(transactions, (transaction, callback) => {\n      transaction.remove(callback);\n    }, (removeErr, deletedTransactions) => {\n      if (removeErr) { return handleError(removeErr, res, 'delete', 'Transactions'); }\n      res.status(200).send({\n        message: `Success! Transactions deleted.`,\n        data: deletedTransactions\n      });\n    });\n  });\n});\n\napi.use('/', resource('Transaction', true));\n\nexport default api;\n"]}
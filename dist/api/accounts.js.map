{"version":3,"sources":["../../src/api/accounts.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,MAAM,qBAAN;AACN,IAAI,GAAJ,CAAQ,mBAAS,YAAT,CAAsB,CAAC,KAAD,EAAQ,QAAR,CAAtB,EAAyC,EAAE,SAAS,KAAT,EAA3C,CAAR;;;AAGA,0BAAW,GAAX,EAAgB,SAAhB,EAA2B,IAA3B,EAAiC,UAAC,GAAD,EAAM,GAAN,EAAW,QAAX,EAAwB;AACvD,kBAAM,GAAN,CAAU,QAAV,EAAoB,UAAC,OAAD,EAAU,QAAV,EAAuB;AACzC,YAAQ,UAAR,CAAmB,UAAC,GAAD,EAAM,OAAN,EAAkB;AACnC,UAAM,oBAAoB,QAAQ,MAAR,EAApB,CAD6B;AAEnC,wBAAkB,OAAlB,GAA4B,OAA5B,CAFmC;AAGnC,eAAS,IAAT,EAAe,iBAAf,EAHmC;KAAlB,CAAnB,CADyC;GAAvB,EAMjB,UAAC,GAAD,EAAM,kBAAN,EAA6B;AAC9B,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,EAAE,MAAM,kBAAN,EAAvB,EAD8B;GAA7B,CANH,CADuD;CAAxB,CAAjC;;;AAaA,0BAAW,GAAX,EAAgB,SAAhB,EAA2B,IAA3B,EAAiC,UAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAuB;AACtD,UAAQ,UAAR,CAAmB,UAAC,GAAD,EAAM,OAAN,EAAkB;AACnC,QAAM,oBAAoB,QAAQ,MAAR,EAApB,CAD6B;AAEnC,sBAAkB,OAAlB,GAA4B,OAA5B,CAFmC;AAGnC,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,EAAE,MAAM,iBAAN,EAAvB,EAHmC;GAAlB,CAAnB,CADsD;CAAvB,CAAjC;;;AASA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACzB,MAAM,QAAQ,oCAAoB,GAApB,CAAR,CADmB;AAEzB,QAAM,IAAN,GAAa,IAAI,IAAJ,CAAS,EAAT,CAFY;AAGzB,cAAQ,IAAR,CAAa,KAAb,EAAoB,UAAC,OAAD,EAAU,QAAV,EAAuB;AACzC,QAAI,OAAJ,EAAa;AAAE,aAAO,wBAAY,OAAZ,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,UAApC,CAAP,CAAF;KAAb;AACA,QAAM,kBAAkB,SAAS,GAAT,CAAa,UAAC,WAAD;aAAiB,iBAAE,KAAF,CAAQ,WAAR,EAAqB,iBAAE,IAAF,CAAO,IAAI,IAAJ,EAAU,YAAQ,aAAR,MAA2B,EAA3B,CAAtC;KAAjB,CAA/B,CAFmC;AAGzC,oBAAM,GAAN,CAAU,eAAV,EAA2B,UAAC,WAAD,EAAc,QAAd,EAA2B;AACpD,kBAAY,IAAZ,CAAiB,QAAjB,EADoD;KAA3B,EAExB,UAAC,OAAD,EAAU,UAAV,EAAyB;AAC1B,UAAI,OAAJ,EAAa;AAAE,eAAO,wBAAY,OAAZ,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,UAApC,CAAP,CAAF;OAAb;AACA,UAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,6CADmB;AAEnB,cAAM,UAAN;OAFF,EAF0B;KAAzB,CAFH,CAHyC;GAAvB,CAApB,CAHyB;CAAd,CAAb;;AAkBA,IAAI,GAAJ,CAAQ,GAAR,EAAa,wBAAS,SAAT,EAAoB,IAApB,EAA0B,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAA1B,CAAb;;kBAEe","file":"accounts.js","sourcesContent":["import _ from 'lodash';\nimport async from 'async';\nimport passport from 'passport';\nimport { Router } from 'express';\nimport resource, { listMethod, showMethod } from './resource';\nimport { buildQuery, handleError } from './index';\nimport { Account } from '../db';\n\nconst api = new Router();\napi.use(passport.authenticate(['jwt', 'bearer'], { session: false }));\n\n// GET - List (with Balance)\nlistMethod(api, 'Account', true, (req, res, accounts) => {\n  async.map(accounts, (account, callback) => {\n    account.getBalance((err, balance) => {\n      const normalizedAccount = account.toJSON();\n      normalizedAccount.balance = balance;\n      callback(null, normalizedAccount);\n    });\n  }, (err, normalizedAccounts) => {\n    res.status(200).send({ data: normalizedAccounts });\n  });\n});\n\n// GET - Show (with Balance)\nshowMethod(api, 'Account', true, (req, res, account) => {\n  account.getBalance((err, balance) => {\n    const normalizedAccount = account.toJSON();\n    normalizedAccount.balance = balance;\n    res.status(200).send({ data: normalizedAccount });\n  });\n});\n\n// Update Multiple\napi.put('/', (req, res) => {\n  const query = buildQuery(Account, req);\n  query.user = req.user.id;\n  Account.find(query, (findErr, accounts) => {\n    if (findErr) { return handleError(findErr, res, 'update', 'Accounts'); }\n    const updatedAccounts = accounts.map((transaction) => _.merge(transaction, _.omit(req.body, Account.readonlyProps() || [])));\n    async.map(updatedAccounts, (transaction, callback) => {\n      transaction.save(callback);\n    }, (saveErr, dbAccounts) => {\n      if (saveErr) { return handleError(saveErr, res, 'delete', 'Accounts'); }\n      res.status(200).send({\n        message: `Success! Accounts updated.`,\n        data: dbAccounts\n      });\n    });\n  });\n});\n\napi.use('/', resource('Account', true, ['create', 'update', 'delete']));\n\nexport default api;\n"]}
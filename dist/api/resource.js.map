{"version":3,"sources":["../../src/api/resource.js"],"names":[],"mappings":"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","file":"resource.js","sourcesContent":["import _ from 'lodash';\nimport passport from 'passport';\nimport { Router } from 'express';\nimport * as db from '../db';\nimport { handleError, getInclusions, buildQuery } from './index';\n\nexport function listMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.get('/', (req, res) => {\n    const query = buildQuery(Model, req);\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.find(query).populate(getInclusions(req)).exec((err, docs) => {\n      if (err) { return handleError(err, res, 'list', Model.modelName); }\n      callback(req, res, docs);\n    });\n  });\n}\n\nexport function createMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.post('/', (req, res) => {\n    const entity = req.body;\n    if (shouldAuthenticate) {\n      entity.user = req.user.id;\n    }\n    Model.create(entity, (err, doc) => {\n      if (err) { return handleError(err, res, 'create', Model.modelName); }\n      callback(req, res, doc);\n    });\n  });\n}\n\nexport function showMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.get('/:id', (req, res) => {\n    const query = { _id: req.params.id };\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.findOne(query).populate(getInclusions(req)).exec((err, doc) => {\n      if (err || !doc) { return handleError(err, res, 'show', Model.modelName); }\n      callback(req, res, doc);\n    });\n  });\n}\n\nexport function updateMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.put('/:id', (req, res) => {\n    const query = { _id: req.params.id };\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.findOne(query, (findErr, doc) => {\n      if (findErr) { return handleError(findErr, res, 'update', Model.modelName); }\n      const updatedDoc = _.merge(doc, _.omit(req.body, Model.readonlyProps() || []));\n      updatedDoc.save((saveErr, savedDoc) => {\n        if (saveErr) { return handleError(saveErr, res, 'update', Model.modelName); }\n        callback(req, res, savedDoc);\n      });\n    });\n  });\n}\n\nexport function deleteMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.delete('/:id', (req, res) => {\n    const query = { _id: req.params.id };\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.findOne(query, (findErr, doc) => {\n      if (findErr || !doc) { return handleError(findErr, res, 'delete', model); }\n      doc.remove(req.query, (removeErr, removedDoc) => {\n        if (removeErr) { return handleError(removeErr, res, 'delete', model); }\n        callback(req, res, removedDoc);\n      });\n    });\n  });\n}\n\nexport default function (model, shouldAuthenticate, actions = ['list', 'create', 'show', 'update', 'delete']) {\n  const api = new Router();\n\n  if (shouldAuthenticate) {\n    api.use(passport.authenticate(['jwt', 'bearer'], { session: false }));\n  }\n\n  actions.forEach((action) => {\n    switch (action) {\n      case 'list':\n        // GET - List\n        listMethod(api, model, shouldAuthenticate, (req, res, docs) => {\n          res.status(200).send({ data: docs });\n        });\n        break;\n      case 'create':\n        // POST - Create\n        createMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(201).send({\n            message: `Success! ${model} created.`,\n            data: doc\n          });\n        });\n        break;\n      case 'show':\n        // GET - Show\n        showMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(200).send({ data: doc });\n        });\n        break;\n      case 'update':\n        // PUT - Update\n        updateMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(200).send({\n            message: `Success! ${model} updated.`,\n            data: doc\n          });\n        });\n        break;\n      case 'delete':\n        // DELETE - Delete\n        deleteMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(200).send({\n            message: `Success! ${model} deleted.`,\n            data: doc\n          });\n        });\n        break;\n      default:\n    }\n  });\n\n  return api;\n}\n"]}
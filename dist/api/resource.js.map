{"version":3,"sources":["../../src/api/resource.js"],"names":[],"mappings":"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","file":"resource.js","sourcesContent":["import _ from 'lodash';\nimport passport from 'passport';\nimport { Router } from 'express';\nimport * as db from '../db';\nimport { handleError, getInclusions, buildQuery } from './index';\n\nexport function listMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.get('/', (req, res) => {\n    const query = buildQuery(Model, req);\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.find(query).populate(getInclusions(req)).exec((err, docs) => {\n      if (err) { return handleError(err, res, 'list', Model.modelName); }\n      callback(req, res, docs);\n    });\n  });\n}\n\nexport function createMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.post('/', (req, res) => {\n    const entity = req.body;\n    if (shouldAuthenticate) {\n      entity.user = req.user.id;\n    }\n    Model.create(entity, (err, doc) => {\n      if (err) { return handleError(err, res, 'create', Model.modelName); }\n      callback(req, res, doc);\n    });\n  });\n}\n\nexport function showMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.get('/:id', (req, res) => {\n    const query = { _id: req.params.id };\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.findOne(query).populate(getInclusions(req)).exec((err, doc) => {\n      if (err || !doc) { return handleError(err, res, 'show', Model.modelName); }\n      callback(req, res, doc);\n    });\n  });\n}\n\nexport function updateMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.put('/:id', (req, res) => {\n    const query = { _id: req.params.id };\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.findOneAndUpdate(query, _.omit(req.body, Model.readonlyProps() || []), { new: true }, (err, doc) => {\n      if (err) { return handleError(err, res, 'update', Model.modelName); }\n      callback(req, res, doc);\n    });\n  });\n}\n\nexport function deleteMethod(api, model, shouldAuthenticate, callback) {\n  const Model = db[model];\n  api.delete('/:id', (req, res) => {\n    const query = { _id: req.params.id };\n    if (shouldAuthenticate) {\n      query.user = req.user.id;\n    }\n    Model.findOne(query, (queryErr, queryDoc) => {\n      if (queryErr || !queryDoc) { return handleError(queryErr, res, 'delete', model); }\n      queryDoc.remove(req.query, (removeErr, doc) => {\n        if (removeErr) { return handleError(removeErr, res, 'delete', model); }\n        callback(req, res, doc);\n      });\n    });\n  });\n}\n\nexport default function (model, shouldAuthenticate, actions = ['list', 'create', 'show', 'update', 'delete']) {\n  const api = new Router();\n\n  if (shouldAuthenticate) {\n    api.use(passport.authenticate(['jwt', 'bearer'], { session: false }));\n  }\n\n  actions.forEach((action) => {\n    switch (action) {\n      case 'list':\n        // GET - List\n        listMethod(api, model, shouldAuthenticate, (req, res, docs) => {\n          res.status(200).send({ data: docs });\n        });\n        break;\n      case 'create':\n        // POST - Create\n        createMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(201).send({\n            message: `Success! ${model} created.`,\n            data: doc\n          });\n        });\n        break;\n      case 'show':\n        // GET - Show\n        showMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(200).send({ data: doc });\n        });\n        break;\n      case 'update':\n        // PUT - Update\n        updateMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(200).send({\n            message: `Success! ${model} updated.`,\n            data: doc\n          });\n        });\n        break;\n      case 'delete':\n        // DELETE - Delete\n        deleteMethod(api, model, shouldAuthenticate, (req, res, doc) => {\n          res.status(200).send({\n            message: `Success! ${model} deleted.`,\n            data: doc\n          });\n        });\n        break;\n      default:\n    }\n  });\n\n  return api;\n}\n"]}
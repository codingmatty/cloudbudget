{"version":3,"sources":["../../src/api/users.js"],"names":[],"mappings":"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","file":"users.js","sourcesContent":["import _ from 'lodash';\nimport passport from 'passport';\nimport { Router } from 'express';\nimport { handleError } from './index';\nimport { User, AccessToken } from '../db';\n\nconst api = new Router();\n\napi.post('/register', passport.authenticate(['basic', 'oauth2-client-password'], { session: false }), (req, res) => {\n  const newUser = _.merge(req.body, { password: User.hashPassword(req.body.password) });\n  User.create(newUser, (createErr, user) => {\n    if (createErr) { return handleError(createErr, res, 'create', 'User'); }\n    res.status(201).send({\n      message: `Success! User created.`,\n      data: user\n    });\n  });\n});\n\napi.put('/:id', passport.authenticate(['jwt', 'bearer'], { session: false }), (req, res) => {\n  if (req.body.password) {\n    req.body.password = User.hashPassword(req.body.password);\n    req.body.$unset = { nonce: 1 };\n  }\n  User.findByIdAndUpdate(req.params.id, req.body, { new: true }, (updateErr, user) => {\n    if (updateErr) { return handleError(updateErr, res, 'update', 'User'); }\n    res.status(200).send({\n      message: `Success! User updated.`,\n      data: user\n    });\n  });\n});\n\napi.get('/info', passport.authenticate(['jwt', 'bearer'], { session: false }), (req, res) => {\n  res.status(200).send({ data: req.user });\n});\n\napi.post('/login', passport.authenticate('local', { session: false }), (req, res) => {\n  res.status(200).send({\n    message: 'Login Succeeded!',\n    data: req.user,\n    token: req.user.token\n  });\n});\n\napi.get('/logout', passport.authenticate('jwt', { session: false }), (req, res) => {\n  User.findByIdAndUpdate(req.user.id, { $unset: { nonce: 1 } }, (updateErr) => {\n    if (updateErr) { return handleError(updateErr, res, 'logout', 'User'); }\n    res.status(200).send({ message: 'Logout Succeeded!' });\n  });\n});\n\napi.get('/revoke', passport.authenticate('bearer', { session: false }), (req, res) => {\n  AccessToken.remove({ token: req.user.token }, (err) => {\n    if (err) { return handleError(err, res, 'revoke', 'AccessToken'); }\n    res.status(200).send({ message: 'Access Token Revoked!' });\n  });\n});\n\nexport default api;\n"]}
{"version":3,"sources":["../../src/db/user.js"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["import _ from 'lodash';\nimport fs from 'fs';\nimport is from 'is_js';\nimport bcrypt from 'bcrypt';\nimport moment from 'moment';\nimport jwt from 'jsonwebtoken';\nimport randomKey from 'random-key';\nimport mongoose, { Schema } from 'mongoose';\nimport { defaultJSONOptions } from './';\n\n\nconst nonceSchema = new Schema({\n  key: { type: String, required: true },\n  date: { type: Date, default: Date.now, expires: '1d' }\n});\n\nconst userSchema = new Schema({\n  username: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  email: { type: String, required: true, unique: true,\n    validate: {\n      validator: (value) => {return is.email(value);},\n      message: '{VALUE} is not a valid email address.'\n    }\n  },\n  verified: { type: Boolean, default: true },\n  nonce: nonceSchema,\n  firstName: String,\n  lastName: String,\n  phone: { type: String,\n    validate: {\n      validator: (value) => {return is.nanpPhone(value) || is.eppPhone(value);},\n      message: '{VALUE} is not a valid phone number.'\n    }\n  }\n}, {\n  toJSON: defaultJSONOptions((doc, ret) => {\n    delete ret.password;\n    delete ret.nonce;\n    delete ret.verified;\n  })\n});\n\nuserSchema.statics.hashPassword = (password) => {\n  return bcrypt.hashSync(password, 8);\n};\n\nuserSchema.methods.verifyUser = function verifyUser(nonce, callback) {\n  const user = this;\n  if (user.nonce && nonce.key === user.nonce.key) {\n    user.update({ verified: true }, callback);\n  }\n};\n\nuserSchema.methods.generateJwt = function generateJwt(options = {}) {\n  const user = this;\n  user.nonce = { key: randomKey.generate(64) };\n  const key = fs.readFileSync(__dirname + '/../../private.pem').toString();\n  return jwt.sign(user.toJSON(), key, _.merge({\n    algorithm: 'RS256',\n    expiresIn: '1d',\n    audience: 'cloudbudget.io',\n    issuer: 'admin@cloudbudget.io',\n    jwtid: user.nonce.key\n  }, options));\n};\n\nuserSchema.methods.verifyPassword = function verifyPassword(password) {\n  const user = this;\n  return user.verified && bcrypt.compareSync(password, user.password);\n};\n\nuserSchema.methods.verifyNonce = function verifyNonce(nonceKey) {\n  const user = this;\n  return user.nonce && moment(user.nonce.date).add(1, 'days') >= moment() && user.nonce.key === nonceKey;\n};\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"]}
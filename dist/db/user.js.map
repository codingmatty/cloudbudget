{"version":3,"sources":["../../src/db/user.js"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["import _ from 'lodash';\nimport fs from 'fs';\nimport is from 'is_js';\nimport bcrypt from 'bcrypt';\nimport moment from 'moment';\nimport jwt from 'jsonwebtoken';\nimport randomKey from 'random-key';\nimport mongoose, { Schema } from 'mongoose';\nimport { defaultJSONOptions } from './';\n\n\nconst nonceSchema = new Schema({\n  key: { type: String, required: true },\n  date: { type: Date, default: Date.now }\n});\n\nconst userSchema = new Schema({\n  username: { type: String, required: true, unique: true, minlength: 4 },\n  password: { type: String, required: true, minlength: 4 },\n  email: { type: String, required: true, unique: true,\n    validate: {\n      validator: (value) => {return is.email(value);},\n      message: '{VALUE} is not a valid email address.'\n    }\n  },\n  verified: { type: Boolean, default: true },\n  nonce: nonceSchema,\n  firstName: String,\n  lastName: String,\n  phone: { type: String,\n    validate: {\n      validator: (value) => {return is.nanpPhone(value) || is.eppPhone(value);},\n      message: '{VALUE} is not a valid phone number.'\n    }\n  }\n}, {\n  toJSON: defaultJSONOptions((doc, ret) => {\n    delete ret.password;\n    delete ret.nonce;\n    delete ret.verified;\n  })\n});\n\nuserSchema.statics.hashPassword = (password) => {\n  return bcrypt.hashSync(password, 8);\n};\n\nuserSchema.methods.verifyUser = function verifyUser(nonce, callback) {\n  const user = this;\n  if (user.nonce && nonce.key === user.nonce.key) {\n    user.update({ verified: true }, callback);\n  }\n};\n\nuserSchema.methods.generateJwt = function generateJwt(options = {}) {\n  const user = this;\n  user.nonce = { key: randomKey.generate(64) };\n  const key = fs.readFileSync(__dirname + '/../../private.pem').toString();\n  return jwt.sign(user.toJSON(), key, _.merge({\n    algorithm: 'RS256',\n    expiresIn: '1d',\n    audience: 'cloudbudget.io',\n    issuer: 'admin@cloudbudget.io',\n    jwtid: user.nonce.key\n  }, options));\n};\n\nuserSchema.methods.verifyPassword = function verifyPassword(password) {\n  const user = this;\n  return user.verified && bcrypt.compareSync(password, user.password);\n};\n\nuserSchema.methods.verifyNonce = function verifyNonce(nonceKey) {\n  const user = this;\n  return user.nonce && moment(user.nonce.date).add(1, 'days') >= moment() && user.nonce.key === nonceKey;\n};\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"]}
{"version":3,"sources":["../../src/db/accessToken.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAIA,IAAM,oBAAoB,qBAAW;AACnC,UAAQ,EAAE,MAAM,iBAAO,KAAP,CAAa,QAAb,EAAuB,KAAK,MAAL,EAAvC;AACA,YAAU,EAAE,MAAM,iBAAO,KAAP,CAAa,QAAb,EAAuB,KAAK,QAAL,EAAzC;AACA,SAAO,EAAE,MAAM,MAAN,EAAc,UAAU,IAAV,EAAgB,WAAW,EAAX,EAAe,WAAW,EAAX,EAAtD;AACA,gBAAc,EAAE,MAAM,MAAN,EAAc,UAAU,IAAV,EAAgB,WAAW,EAAX,EAAe,WAAW,EAAX,EAA7D;AACA,QAAM,EAAE,MAAM,IAAN,EAAY,SAAS,KAAK,GAAL,EAAU,SAAS,KAAT,EAAvC;AALmC,CAAX,EAMvB;AACD,UAAQ,2BAAR;CAPwB,CAApB;;AAUN,kBAAkB,OAAlB,CAA0B,cAA1B,GAA2C,YAAM;AAC/C,SAAO;AACL,WAAO,oBAAU,QAAV,CAAmB,EAAnB,CAAP;AACA,kBAAc,oBAAU,QAAV,CAAmB,EAAnB,CAAd;GAFF,CAD+C;CAAN;;AAO3C,IAAM,cAAc,mBAAS,KAAT,CAAe,aAAf,EAA8B,iBAA9B,CAAd;;kBAES","file":"accessToken.js","sourcesContent":["import randomKey from 'random-key';\nimport mongoose, { Schema } from 'mongoose';\nimport { defaultJSONOptions } from './';\n\nconst accessTokenSchema = new Schema({\n  userId: { type: Schema.Types.ObjectId, ref: 'User' },\n  clientId: { type: Schema.Types.ObjectId, ref: 'Client' },\n  token: { type: String, required: true, minlength: 64, maxlength: 64 },\n  refreshToken: { type: String, required: true, minlength: 64, maxlength: 64 },\n  date: { type: Date, default: Date.now, expires: '14d' } // AccessToken expires in 14 days.\n}, {\n  toJSON: defaultJSONOptions()\n});\n\naccessTokenSchema.statics.generateTokens = () => {\n  return {\n    token: randomKey.generate(64),\n    refreshToken: randomKey.generate(64)\n  };\n};\n\nconst AccessToken = mongoose.model('AccessToken', accessTokenSchema);\n\nexport default AccessToken;\n"]}